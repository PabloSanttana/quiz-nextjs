import Head from "next/head";
import { useEffect, useRef, useState } from "react";
import questionModel from "../model/question";
import Quiz from "../components/Quiz";
import { useRouter } from "next/router";

const BASE_URL = "http://localhost:3000/api";

export default function Home() {
  const router = useRouter();
  const [ids, setIds] = useState<number[]>([]);
  const [question, setQuestion] = useState<questionModel>();
  const questionRef = useRef<questionModel>();
  const [questionsRight, setQuestionsRight] = useState<number>(0);

  useEffect(() => {
    questionRef.current = question;
    return () => {};
  }, [question]);

  useEffect(() => {
    getIdsQuestions();
    return () => {};
  }, []);
  useEffect(() => {
    ids.length > 0 && getQuestions(ids[0]);
    return () => {};
  }, [ids]);

  async function getIdsQuestions() {
    const res = await fetch(BASE_URL + "/quiz");
    const ids = await res.json();
    setIds(ids);
  }
  async function getQuestions(id: number) {
    const res = await fetch(`${BASE_URL}/questoes/${id}`);
    const questions = await res.json();

    setQuestion(questionModel.toQuestionModel(questions));
  }

  function handleSelectedAnswer(question: questionModel) {
    setQuestion(question);
    const toHit = question.toHit;
    setQuestionsRight(questionsRight + (toHit ? 1 : 0));
  }

  function idQuestionNext() {
    const nextIndex = ids.indexOf(question.id) + 1;
    return ids[nextIndex];
  }

  function handleNext() {
    const nextID = idQuestionNext();

    nextID ? nextQuestion(nextID) : finished();
    /*  if (!questionRef.current.HandleAnswer) {
      setQuestion(question.handleAnswerQuestion(-1));
    } */
  }

  function nextQuestion(index: number) {
    getQuestions(index);
  }
  function finished() {
    router.push(`/resultado?total=${ids.length}&certas=${questionsRight}`);
  }
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        {question && (
          <Quiz
            question={question}
            last={idQuestionNext() === undefined}
            answerQuestion={handleSelectedAnswer}
            next={handleNext}
          />
        )}
      </main>
    </div>
  );
}
